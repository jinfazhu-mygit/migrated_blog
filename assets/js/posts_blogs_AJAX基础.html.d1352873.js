"use strict";(self.webpackChunkmigrated_blog=self.webpackChunkmigrated_blog||[]).push([[3886],{6262:(a,i)=>{i.A=(a,i)=>{const s=a.__vccOpts||a;for(const[a,t]of i)s[a]=t;return s}},7610:(a,i,s)=>{s.r(i),s.d(i,{comp:()=>p,data:()=>n});var t=s(641);const e={},p=(0,s(6262).A)(e,[["render",function(a,i){return(0,t.uX)(),(0,t.CE)("div",null,i[0]||(i[0]=[(0,t.Fv)('<h2 id="ajax基础" tabindex="-1"><a class="header-anchor" href="#ajax基础"><span>AJAX基础</span></a></h2><ul><li><h3 id="初始化-终端" tabindex="-1"><a class="header-anchor" href="#初始化-终端"><span>初始化(终端)</span></a></h3></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>npm init -y</span></span>\n<span class="line"><span>npm i expreess  //使用express框架</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><h3 id="通过express创建后台-添加监听" tabindex="-1"><a class="header-anchor" href="#通过express创建后台-添加监听"><span>通过express创建后台，添加监听</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1gtLd.jpg" alt="W1gtLd.jpg" tabindex="0" loading="lazy"><figcaption>W1gtLd.jpg</figcaption></figure><ul><li><h3 id="设置允许跨域-response-setheader-access-control-allow-origin-以及请求的路径-server" tabindex="-1"><a class="header-anchor" href="#设置允许跨域-response-setheader-access-control-allow-origin-以及请求的路径-server"><span>设置允许跨域(response.setHeader(&#39;Access-Control-Allow-Origin&#39;,&#39;*&#39;) ),以及请求的路径&#39;/server&#39;</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1gEzF.jpg" alt="W1gEzF.jpg" tabindex="0" loading="lazy"><figcaption>W1gEzF.jpg</figcaption></figure><ul><li><h3 id="创建xmlhttprequest对象-以及readystate的0-1-2-3-4的状态" tabindex="-1"><a class="header-anchor" href="#创建xmlhttprequest对象-以及readystate的0-1-2-3-4的状态"><span>创建XMLHttpRequest对象，以及readystate的0，1，2，3，4的状态</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1gZM4.jpg" alt="W1gZM4.jpg" tabindex="0" loading="lazy"><figcaption>W1gZM4.jpg</figcaption></figure><ul><li><h3 id="get请求的查询字段-在xhr的open属性中设置-的后面" tabindex="-1"><a class="header-anchor" href="#get请求的查询字段-在xhr的open属性中设置-的后面"><span>GET请求的查询字段(在xhr的open属性中设置，?的后面)</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1gFiV.jpg" alt="W1gFiV.jpg" tabindex="0" loading="lazy"><figcaption>W1gFiV.jpg</figcaption></figure><ul><li><h3 id="post请求的接收与发送" tabindex="-1"><a class="header-anchor" href="#post请求的接收与发送"><span>POST请求的接收与发送</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1gkGT.jpg" alt="W1gkGT.jpg" tabindex="0" loading="lazy"><figcaption>W1gkGT.jpg</figcaption></figure><ul><li><h3 id="post请求的请求体-xhr-send-里" tabindex="-1"><a class="header-anchor" href="#post请求的请求体-xhr-send-里"><span>POST请求的请求体( xhr.send()里 )</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1guZR.jpg" alt="W1guZR.jpg" tabindex="0" loading="lazy"><figcaption>W1guZR.jpg</figcaption></figure><ul><li><h3 id="设置请求头信息-与-自定义请求头信息" tabindex="-1"><a class="header-anchor" href="#设置请求头信息-与-自定义请求头信息"><span>设置请求头信息 与 自定义请求头信息</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1guZR.jpg" alt="W1guZR.jpg" tabindex="0" loading="lazy"><figcaption>W1guZR.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/17/W1gMIx.jpg" alt="W1gMIx.jpg" tabindex="0" loading="lazy"><figcaption>W1gMIx.jpg</figcaption></figure><ul><li><h3 id="app-all-option" tabindex="-1"><a class="header-anchor" href="#app-all-option"><span>app.all option</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/17/W1gKd1.jpg" alt="W1gKd1.jpg" tabindex="0" loading="lazy"><figcaption>W1gKd1.jpg</figcaption></figure><ul><li><h3 id="服务端响应json数据-json-stringify-object-转化为str-json-parse-xhr-response-还原" tabindex="-1"><a class="header-anchor" href="#服务端响应json数据-json-stringify-object-转化为str-json-parse-xhr-response-还原"><span>服务端响应JSON数据 ( JSON.stringify(Object)转化为str JSON.parse(xhr.response)还原 )</span></a></h3></li></ul><p>JSON.stringify(Object)转化为str</p><figure><img src="https://z3.ax1x.com/2021/07/17/W1fjDe.jpg" alt="W1fjDe.jpg" tabindex="0" loading="lazy"><figcaption>W1fjDe.jpg</figcaption></figure><p>JSON.parse(xhr.response) (手动还原)</p><figure><img src="https://z3.ax1x.com/2021/07/17/W1fLjO.jpg" alt="W1fLjO.jpg" tabindex="0" loading="lazy"><figcaption>W1fLjO.jpg</figcaption></figure><p>xhr.responseType=&#39;json&#39; (自动还原)</p><figure><img src="https://z3.ax1x.com/2021/07/17/W1fXuD.jpg" alt="W1fXuD.jpg" tabindex="0" loading="lazy"><figcaption>W1fXuD.jpg</figcaption></figure><ul><li><h3 id="nodemon的安装-解决ie浏览器缓存问题" tabindex="-1"><a class="header-anchor" href="#nodemon的安装-解决ie浏览器缓存问题"><span>nodemon的安装，解决IE浏览器缓存问题</span></a></h3></li></ul><p>nodemon安装与使用 终端命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>npm install -g nodemon</span></span>\n<span class="line"><span>nodemon ___.js //服务端数据改变，不刷新，自动更换页面</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>IE浏览器缓存问题解决</p><figure><img src="https://z3.ax1x.com/2021/07/18/W3ZZ1s.jpg" alt="W3ZZ1s.jpg" tabindex="0" loading="lazy"><figcaption>W3ZZ1s.jpg</figcaption></figure><ul><li><h3 id="ajax请求超时与网络异常处理" tabindex="-1"><a class="header-anchor" href="#ajax请求超时与网络异常处理"><span>AJAX请求超时与网络异常处理</span></a></h3></li></ul><p>xhr.timeout= ;</p><p>xhr.ontimeout=function(){ };</p><figure><img src="https://z3.ax1x.com/2021/07/18/W3Zecn.jpg" alt="W3Zecn.jpg" tabindex="0" loading="lazy"><figcaption>W3Zecn.jpg</figcaption></figure><p>xhr.onerror=function(){ };</p><figure><img src="https://z3.ax1x.com/2021/07/18/W3ZFAS.jpg" alt="W3ZFAS.jpg" tabindex="0" loading="lazy"><figcaption>W3ZFAS.jpg</figcaption></figure><ul><li><h3 id="取消请求及重复发送问题的解决-xhr-abort" tabindex="-1"><a class="header-anchor" href="#取消请求及重复发送问题的解决-xhr-abort"><span>取消请求及重复发送问题的解决( xhr.abort(); )</span></a></h3></li></ul><p>超时<br><img src="https://z3.ax1x.com/2021/07/18/W3ZAhQ.jpg" alt="W3ZAhQ.jpg" loading="lazy"><br> 重复发送<br><img src="https://z3.ax1x.com/2021/07/18/W3ZVpj.jpg" alt="W3ZVpj.jpg" loading="lazy"></p><ul><li><h3 id="jquery发送ajax请求" tabindex="-1"><a class="header-anchor" href="#jquery发送ajax请求"><span>jQuery发送AJAX请求</span></a></h3></li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;button&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;json&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>get请求<br><img src="https://z3.ax1x.com/2021/07/18/W3Zun0.jpg" alt="W3Zun0.jpg" loading="lazy"><br> post请求<br><img src="https://z3.ax1x.com/2021/07/18/W3ZKBV.jpg" alt="W3ZKBV.jpg" loading="lazy"></p><ul><li><h3 id="jquery通用方法发送ajax请求" tabindex="-1"><a class="header-anchor" href="#jquery通用方法发送ajax请求"><span>jQuery通用方法发送AJAX请求</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/18/W3YN7Q.jpg" alt="W3YN7Q.jpg" tabindex="0" loading="lazy"><figcaption>W3YN7Q.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/18/W3Yakj.jpg" alt="W3Yakj.jpg" tabindex="0" loading="lazy"><figcaption>W3Yakj.jpg</figcaption></figure><ul><li><h3 id="axios发送ajax请求-axios使用的是promise回调" tabindex="-1"><a class="header-anchor" href="#axios发送ajax请求-axios使用的是promise回调"><span>Axios发送AJAX请求(axios使用的是promise回调)</span></a></h3></li></ul><p>直接用BootCDN引入Axios crossorigin=&quot;annoymous&quot;</p><p>get</p><figure><img src="https://z3.ax1x.com/2021/07/18/W3Yt0g.jpg" alt="W3Yt0g.jpg" tabindex="0" loading="lazy"><figcaption>W3Yt0g.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/18/W3YBpq.jpg" alt="W3YBpq.jpg" tabindex="0" loading="lazy"><figcaption>W3YBpq.jpg</figcaption></figure><p>post</p><figure><img src="https://z3.ax1x.com/2021/07/18/W3YYnS.jpg" alt="W3YYnS.jpg" tabindex="0" loading="lazy"><figcaption>W3YYnS.jpg</figcaption></figure><ul><li><h3 id="fetch函数发送ajax请求" tabindex="-1"><a class="header-anchor" href="#fetch函数发送ajax请求"><span>fetch函数发送AJAX请求</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/18/W3RGwj.jpg" alt="W3RGwj.jpg" tabindex="0" loading="lazy"><figcaption>W3RGwj.jpg</figcaption></figure><ul><li><h3 id="同源策略" tabindex="-1"><a class="header-anchor" href="#同源策略"><span>同源策略</span></a></h3></li></ul><p>协议，域名，端口必须完全相同</p><figure><img src="https://z3.ax1x.com/2021/07/18/W3Ro0H.jpg" alt="W3Ro0H.jpg" tabindex="0" loading="lazy"><figcaption>W3Ro0H.jpg</figcaption></figure><ul><li><h3 id="jsonp解决跨域原理" tabindex="-1"><a class="header-anchor" href="#jsonp解决跨域原理"><span>JSONP解决跨域原理</span></a></h3></li></ul><p><strong>jsonp只支持get请求</strong></p><p>网页有些标签天生具备跨域能力，如：img,link,iframe,script,</p><figure><img src="https://z3.ax1x.com/2021/07/18/W3R4XD.jpg" alt="W3R4XD.jpg" tabindex="0" loading="lazy"><figcaption>W3R4XD.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/18/W3RT7d.jpg" alt="W3RT7d.jpg" tabindex="0" loading="lazy"><figcaption>W3RT7d.jpg</figcaption></figure><ul><li><h3 id="原生jsonp实践" tabindex="-1"><a class="header-anchor" href="#原生jsonp实践"><span>原生jsonp实践</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/18/W3Tasx.jpg" alt="W3Tasx.jpg" tabindex="0" loading="lazy"><figcaption>W3Tasx.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/18/W3TUQ1.jpg" alt="W3TUQ1.jpg" tabindex="0" loading="lazy"><figcaption>W3TUQ1.jpg</figcaption></figure><ul><li><h3 id="jquery发送jsonp请求" tabindex="-1"><a class="header-anchor" href="#jquery发送jsonp请求"><span>jquery发送jsonp请求</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/18/W3TYW9.jpg" alt="W3TYW9.jpg" tabindex="0" loading="lazy"><figcaption>W3TYW9.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/18/W3HpHf.jpg" alt="W3HpHf.jpg" tabindex="0" loading="lazy"><figcaption>W3HpHf.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/18/W3TtzR.jpg" alt="W3TtzR.jpg" tabindex="0" loading="lazy"><figcaption>W3TtzR.jpg</figcaption></figure><ul><li><h3 id="cors响应头实现跨域" tabindex="-1"><a class="header-anchor" href="#cors响应头实现跨域"><span>CORS响应头实现跨域</span></a></h3></li></ul><figure><img src="https://z3.ax1x.com/2021/07/18/W3TdL6.jpg" alt="W3TdL6.jpg" tabindex="0" loading="lazy"><figcaption>W3TdL6.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/07/18/W3T0eK.jpg" alt="W3T0eK.jpg" tabindex="0" loading="lazy"><figcaption>W3T0eK.jpg</figcaption></figure>',73)]))}]]),n=JSON.parse('{"path":"/posts/blogs/AJAX%E5%9F%BA%E7%A1%80","title":"AJAX基础","lang":"zh-CN","frontmatter":{"title":"AJAX基础","date":"2021-07-17T23:15:00.000Z","permalink":"/posts/blogs/AJAX基础","isTimeLine":true,"category":["我的前端路线"],"tag":["javascript","ajax"],"icon":"pen-to-square","star":true,"sticky":true,"description":"AJAX基础 初始化(终端) 通过express创建后台，添加监听 W1gtLd.jpgW1gtLd.jpg 设置允许跨域(response.setHeader(\'Access-Control-Allow-Origin\',\'*\') ),以及请求的路径\'/server\' W1gEzF.jpgW1gEzF.jpg 创建XMLHttpRequest对象，以及...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AJAX基础\\",\\"image\\":[\\"https://z3.ax1x.com/2021/07/17/W1gtLd.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1gEzF.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1gZM4.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1gFiV.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1gkGT.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1guZR.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1guZR.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1gMIx.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1gKd1.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1fjDe.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1fLjO.jpg\\",\\"https://z3.ax1x.com/2021/07/17/W1fXuD.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3ZZ1s.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3Zecn.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3ZFAS.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3ZAhQ.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3ZVpj.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3Zun0.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3ZKBV.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3YN7Q.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3Yakj.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3Yt0g.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3YBpq.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3YYnS.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3RGwj.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3Ro0H.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3R4XD.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3RT7d.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3Tasx.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3TUQ1.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3TYW9.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3HpHf.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3TtzR.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3TdL6.jpg\\",\\"https://z3.ax1x.com/2021/07/18/W3T0eK.jpg\\"],\\"datePublished\\":\\"2021-07-17T23:15:00.000Z\\",\\"dateModified\\":\\"2025-07-03T11:15:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/migrated_blog/posts/blogs/AJAX%E5%9F%BA%E7%A1%80"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"AJAX基础"}],["meta",{"property":"og:description","content":"AJAX基础 初始化(终端) 通过express创建后台，添加监听 W1gtLd.jpgW1gtLd.jpg 设置允许跨域(response.setHeader(\'Access-Control-Allow-Origin\',\'*\') ),以及请求的路径\'/server\' W1gEzF.jpgW1gEzF.jpg 创建XMLHttpRequest对象，以及..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://z3.ax1x.com/2021/07/17/W1gtLd.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-03T11:15:49.000Z"}],["meta",{"property":"article:tag","content":"ajax"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:published_time","content":"2021-07-17T23:15:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-03T11:15:49.000Z"}]]},"git":{"createdTime":1751541349000,"updatedTime":1751541349000,"contributors":[{"name":"zhujinfa","username":"zhujinfa","email":"2095229306@qq.com","commits":1,"url":"https://github.com/zhujinfa"}]},"readingTime":{"minutes":1.78,"words":535},"filePathRelative":"posts/blogs/AJAX基础.md","excerpt":"<h2>AJAX基础</h2>\\n<ul>\\n<li>\\n<h3>初始化(终端)</h3>\\n</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-\\"><span class=\\"line\\"><span>npm init -y</span></span>\\n<span class=\\"line\\"><span>npm i expreess  //使用express框架</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);