"use strict";(self.webpackChunkmigrated_blog=self.webpackChunkmigrated_blog||[]).push([[8724],{6262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,t]of s)a[i]=t;return a}},8227:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>h});var t=a(641);const n={},e=(0,a(6262).A)(n,[["render",function(i,s){return(0,t.uX)(),(0,t.CE)("div",null,s[0]||(s[0]=[(0,t.Fv)('<h2 id="上传静态页面至服务器端" tabindex="-1"><a class="header-anchor" href="#上传静态页面至服务器端"><span>上传静态页面至服务器端</span></a></h2><p><strong>上传静态页面应用至服务器端本人目前所知道的方式有两种，一种是通过github托管代码，进入代码仓库settings里面将解析出的域名访问即可直接访问，另一种是通过node的express框架对页面应用开启服务，再通过scp将代码上传至服务器运行(这里博客用的是阿里云的轻量服务器)，服务器端的node环境配合上pm2,即可使用ip加端口的形式即可进行访问</strong></p><h3 id="_1-创建一个页面应用-使用express开启服务" tabindex="-1"><a class="header-anchor" href="#_1-创建一个页面应用-使用express开启服务"><span>1. 创建一个页面应用,使用express开启服务</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 创建一个脚手架页面</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> vue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> create</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> demo</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 打包该框架,生成一个/dist文件夹</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> npm</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://z3.ax1x.com/2021/08/25/hVnfOS.png" alt="hVnfOS.png" tabindex="0" loading="lazy"><figcaption>hVnfOS.png</figcaption></figure><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//在该同级创建node.js模块，使用express框架开启服务</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// node.js</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> express</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;express&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//引入express框架</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> app</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">express</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//应用实例</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">express</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">static</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;./dist&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//访问./dist文件夹内容</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> port</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3003</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;APP running at http://localhost:&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//编译node.js模块，至http://localhost:3003可访问到</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">js</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   //APP running at http://localhost:3003</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://z3.ax1x.com/2021/08/25/hVuqNd.png" alt="hVuqNd.png" tabindex="0" loading="lazy"><figcaption>hVuqNd.png</figcaption></figure><h3 id="_2-上传页面应用至服务器-scp" tabindex="-1"><a class="header-anchor" href="#_2-上传页面应用至服务器-scp"><span>2. 上传页面应用至服务器(scp)</span></a></h3><p>**scp上传文件夹命令：scp -r 文件夹路径 root@120.78.***.**:/dev/dist ** //上传需要输入服务器的密码，上传之前可先给服务器创建快照进行备份，</p><p>**scp上传文件命令：scp 文件路径 root@120.78.***.**:/dev **</p><ul><li>scp：上传命令</li><li>-r：上传文件是文件夹</li><li>./dist：本地需要上传文件的位置</li><li>root@120...：使用 root 用户名登录远程服务器 120....</li><li>:/home/library-book-search/web/：表示保存在远程服务器上的地址</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> scp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dist</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">120.78</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">174.96</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dev</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dist</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //这里需要注意先在服务器端分好文件路径，我这在服务器端/dev下mkdir /dist创建好了dist文件夹</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> scp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">js</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">120.78</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">174.96</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://z3.ax1x.com/2021/08/25/hVN2UP.jpg" alt="hVN2UP.jpg" tabindex="0" loading="lazy"><figcaption>hVN2UP.jpg</figcaption></figure><h3 id="_3、服务器端配置" tabindex="-1"><a class="header-anchor" href="#_3、服务器端配置"><span>3、服务器端配置</span></a></h3><p><strong>服务器端要运行node实例模块需要安装node环境，才能运行node实例，不要再傻傻的去百度 &quot;阿里云linux远程连接安装node环境&quot;了，直接切换系统镜像就行了，跳坑跳坑！</strong></p><figure><img src="https://z3.ax1x.com/2021/08/25/hVtz7t.png" alt="hVtz7t.png" tabindex="0" loading="lazy"><figcaption>hVtz7t.png</figcaption></figure><p><strong>查看node版本号,看系统镜像是否切换成功</strong></p><figure><img src="https://z3.ax1x.com/2021/08/25/hVoX0s.jpg" alt="hVoX0s.jpg" tabindex="0" loading="lazy"><figcaption>hVoX0s.jpg</figcaption></figure><p><strong>找到scp上传的文件，试着使用node运行</strong></p><figure><img src="https://z3.ax1x.com/2021/08/25/hVTE7R.jpg" alt="hVTE7R.jpg" tabindex="0" loading="lazy"><figcaption>hVTE7R.jpg</figcaption></figure><p><strong>然而我们发现直接通过相应的服务器ip加端口进行访问并没有页面，是因为我们必须在服务器端开启相应端口</strong></p><figure><img src="https://z3.ax1x.com/2021/08/25/hVB42V.png" alt="hVB42V.png" tabindex="0" loading="lazy"><figcaption>hVB42V.png</figcaption></figure><p><strong>可以访问了🎉</strong>🎉🎉</p><figure><img src="https://z3.ax1x.com/2021/08/25/hVTyEn.jpg" alt="hVTyEn.jpg" tabindex="0" loading="lazy"><figcaption>hVTyEn.jpg</figcaption></figure><figure><img src="https://z3.ax1x.com/2021/08/25/hV6r7D.png" alt="hV6r7D.png" tabindex="0" loading="lazy"><figcaption>hV6r7D.png</figcaption></figure><p><strong>可以访问了？大功告成，然而当我们把服务器远程连接窗口一关闭，又访问不了了，那就达不到服务器存在的魅力了，那这个时候就得拿出PM2.5了，咳咳...不对，是<a href="https://blog.csdn.net/qq_36938617/article/details/95679412?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162980728616780261999516%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162980728616780261999516&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-95679412.pc_search_download_positive&amp;utm_term=pm2&amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener noreferrer">pm2</a>,这个时候，我们只要使用pm2 list即可查看当前服务器可托管的node进程，然后找到相应的name 使用pm2 start name就可以一直运行界面了</strong></p><figure><img src="https://z3.ax1x.com/2021/08/25/hVTL8K.jpg" alt="hVTL8K.jpg" tabindex="0" loading="lazy"><figcaption>hVTL8K.jpg</figcaption></figure>',27)]))}]]),h=JSON.parse('{"path":"/posts/blogs/%E4%B8%8A%E4%BC%A0%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E8%87%B3%E9%98%BF%E9%87%8C%E4%BA%91","title":"上传静态页面至阿里云","lang":"zh-CN","frontmatter":{"title":"上传静态页面至阿里云","date":"2021-08-25T15:25:00.000Z","permalink":"/posts/blogs/上传静态页面至阿里云","isTimeLine":true,"category":["我的前端路线"],"tag":["node.js"],"icon":"pen-to-square","star":true,"sticky":true,"description":"上传静态页面至服务器端 上传静态页面应用至服务器端本人目前所知道的方式有两种，一种是通过github托管代码，进入代码仓库settings里面将解析出的域名访问即可直接访问，另一种是通过node的express框架对页面应用开启服务，再通过scp将代码上传至服务器运行(这里博客用的是阿里云的轻量服务器)，服务器端的node环境配合上pm2,即可使用ip...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"上传静态页面至阿里云\\",\\"image\\":[\\"https://z3.ax1x.com/2021/08/25/hVnfOS.png\\",\\"https://z3.ax1x.com/2021/08/25/hVuqNd.png\\",\\"https://z3.ax1x.com/2021/08/25/hVN2UP.jpg\\",\\"https://z3.ax1x.com/2021/08/25/hVtz7t.png\\",\\"https://z3.ax1x.com/2021/08/25/hVoX0s.jpg\\",\\"https://z3.ax1x.com/2021/08/25/hVTE7R.jpg\\",\\"https://z3.ax1x.com/2021/08/25/hVB42V.png\\",\\"https://z3.ax1x.com/2021/08/25/hVTyEn.jpg\\",\\"https://z3.ax1x.com/2021/08/25/hV6r7D.png\\",\\"https://z3.ax1x.com/2021/08/25/hVTL8K.jpg\\"],\\"datePublished\\":\\"2021-08-25T15:25:00.000Z\\",\\"dateModified\\":\\"2025-07-03T11:15:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/migrated_blog/posts/blogs/%E4%B8%8A%E4%BC%A0%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E8%87%B3%E9%98%BF%E9%87%8C%E4%BA%91"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"上传静态页面至阿里云"}],["meta",{"property":"og:description","content":"上传静态页面至服务器端 上传静态页面应用至服务器端本人目前所知道的方式有两种，一种是通过github托管代码，进入代码仓库settings里面将解析出的域名访问即可直接访问，另一种是通过node的express框架对页面应用开启服务，再通过scp将代码上传至服务器运行(这里博客用的是阿里云的轻量服务器)，服务器端的node环境配合上pm2,即可使用ip..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://z3.ax1x.com/2021/08/25/hVnfOS.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-03T11:15:49.000Z"}],["meta",{"property":"article:tag","content":"node.js"}],["meta",{"property":"article:published_time","content":"2021-08-25T15:25:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-03T11:15:49.000Z"}]]},"git":{"createdTime":1751541349000,"updatedTime":1751541349000,"contributors":[{"name":"zhujinfa","username":"zhujinfa","email":"2095229306@qq.com","commits":1,"url":"https://github.com/zhujinfa"}]},"readingTime":{"minutes":2.9,"words":870},"filePathRelative":"posts/blogs/上传静态页面至阿里云.md","excerpt":"<h2>上传静态页面至服务器端</h2>\\n<p><strong>上传静态页面应用至服务器端本人目前所知道的方式有两种，一种是通过github托管代码，进入代码仓库settings里面将解析出的域名访问即可直接访问，另一种是通过node的express框架对页面应用开启服务，再通过scp将代码上传至服务器运行(这里博客用的是阿里云的轻量服务器)，服务器端的node环境配合上pm2,即可使用ip加端口的形式即可进行访问</strong></p>\\n<h3>1. 创建一个页面应用,使用express开启服务</h3>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-js\\"><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 创建一个脚手架页面</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">$</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> vue</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> create</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> demo</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 打包该框架,生成一个/dist文件夹</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">$</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> npm</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> run</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> build</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);